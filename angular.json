{
  "$schema": "./node_modules/@angular/cli/lib/config/schema.json",
  "version": 1,
  "newProjectRoot": "projects",
  "projects": {
    "OsmanyPortfolio": {
      "i18n": {
        "sourceLocale":"en-US",
        "locales" : {
          "fr-CA":{
            "translation":"src/locale/messages.xlf",
            "baseHref": "fr-CA"
          },
          "it-CH":{
            "translation":"src/locale/messages.it.xlf",
            "baseHref": "it-CH"
          },
          "de-CH":{
            "translation":"src/locale/messages.de.xlf",
            "baseHref": "de-CH"
          },
          "es-CU":{
            "translation":"src/locale/messages.es.xlf",
            "baseHref": "es-CH"
          }
        }
      },
      "projectType": "application",
      "schematics": {
        
      },
      "root": "",
      "sourceRoot": "src",
      "prefix": "app",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:application",
          "options": {
            "outputPath": "dist/osmany-portfolio",
            "index": "src/index.html",
            "browser": "src/main.ts",
            "localize":["es-CU"],
            "polyfills": [
              "zone.js",
              "@angular/localize/init"
            ],
            "tsConfig": "tsconfig.app.json",
            "assets": [
              {
                "glob": "**/*",
                "input": "public"
              }
            ],
            "styles": [
              "src/styles.css",
              "node_modules/bootstrap/dist/css/bootstrap.min.css"

            ],
            "scripts": [
              "node_modules/bootstrap/dist/js/bootstrap.min.js",
              "node_modules/html2canvas/dist/html2canvas.min.js",
              "node_modules/jspdf/dist/jspdf.es.min.js"
            ],
            "server": "src/main.server.ts",
            "prerender": true,
            "ssr": {
              "entry": "server.ts"
            }
          },
          "configurations": {
            "production": {
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "500kB",
                  "maximumError": "1MB"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "2kB",
                  "maximumError": "4kB"
                }
              ],
              "outputHashing": "all"
            },
            "development": {
              "optimization": false,
              "extractLicenses": false,
              "sourceMap": true
            }
          },
          "defaultConfiguration": "production"
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "configurations": {
            "production": {
              "buildTarget": "OsmanyPortfolio:build:production"
            },
            "development": {
              "buildTarget": "OsmanyPortfolio:build:development"
            }
          },
          "defaultConfiguration": "development"
        },
        "extract-i18n": {
          "builder": "ng-extract-i18n-merge:ng-extract-i18n-merge",
          "options": {
            "buildTarget": "OsmanyPortfolio:build",
            "format": "xlf",
            "outputPath": "src/locale",
            "targetFiles": [
              "messages.xlf",
              "messages.it.xlf",
              "messages.de.xlf",
              "messages.es.xlf"
            ]
          }
        },
        "test": {
          "builder": "@angular-devkit/build-angular:karma",
          "options": {
            "polyfills": [
              "zone.js",
              "zone.js/testing",
              "@angular/localize/init"
            ],
            "tsConfig": "tsconfig.spec.json",
            "assets": [
              {
                "glob": "**/*",
                "input": "public"
              }
            ],
            "styles": [
              "src/styles.css"
            ],
            "scripts": []
          }
        }
      }
    }
  },
  "cli": {
    "analytics": false
  }
}
